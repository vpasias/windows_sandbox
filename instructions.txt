chmod +x cloudlab-setup-ubuntu-tl.sh && ./cloudlab-setup-ubuntu-tl.sh && \
sudo apt-get install libvirt-bin genisoimage libguestfs-tools libosinfo-bin virtinst qemu-kvm git vim net-tools wget curl bash-completion python-pip libvirt-daemon-system virt-manager bridge-utils libnss-libvirt libvirt-clients osinfo-db-tools intltool sshpass -y && \
sudo sed -i 's/hosts:          files dns/hosts:          files libvirt libvirt_guest dns/' /etc/nsswitch.conf && sudo lsmod | grep kvm && sudo reboot
#sudo systemctl restart libvirtd && sudo systemctl status libvirtd

screen
# Press Return to continue
# detach from session without killing it: Ctrl a d 
# to see screen sessions: screen -ls
# detach from closed session: screen -d -r 2035.pts-0.node0
# enter session: screen -r 2035.pts-0.node0
# exit a session and terminate it: exit

sudo -i

# Create OS node VMs
mkdir -p /mnt/extra/ws && cd /mnt/extra/ws

curl -fsSL http://bit.ly/initVagrant | PROVIDER=virtualbox bash
vagrant -v && vboxmanage -V
vboxmanage setproperty machinefolder /mnt/extra/libvirt/ && vboxmanage list systemproperties | grep folder

########################################################################################################################################################################
# Deploying a Windows sandbox using Vagrant and Powershell DSC (https://igorsmolin.ru/en/2020/02/15/deploy-an-automating-windows-sandbox-using-vagrant-and-powershell-dsc-part-1-ad/ ####################
########################################################################################################################################################################

su - iason

sudo adduser `id -un` vboxusers

git clone https://github.com/vpasias/windows_sandbox.git && cd windows_sandbox

vagrant up

# vagrant up dc1
# vagrant up cs1 cs2 cs3 ss1

# 3389 -> localhost:33389
# URL: localhost:3389
# 2200 -> localhost:2200
# URL: localhost:2200
# 2204 -> localhost:2204
# URL: localhost:2204
# 2208 -> localhost:2208
# URL: localhost:2208
# 2212 -> localhost:2212
# URL: localhost:2212

vagrant status

# On CS1/CS2/CS3 PowerShell window
# https://www.server-world.info/en/note?os=Windows_Server_2019&p=wsfc&f=1
Install-WindowsFeature Failover-Clustering -IncludeManagementTools
Restart-Computer -Force

# On SS1 PowerShell window
# https://www.server-world.info/en/note?os=Windows_Server_2019&p=wsfc&f=2
# https://www.server-world.info/en/note?os=Windows_Server_2019&p=iscsi&f=1
Install-WindowsFeature FS-iSCSITarget-Server -IncludeManagementTools
Restart-Computer -Force

New-IscsiServerTarget -TargetName "iSCSITarget01" -InitiatorId @("IPAddress:192.168.11.10","IPAddress:192.168.11.11","IPAddress:192.168.11.12")
New-IscsiVirtualDisk -Path "C:\iSCSIDisk\Quorum01.vhdx" -SizeBytes 512MB
New-IscsiVirtualDisk -Path "C:\iSCSIDisk\Disk01.vhdx" -SizeBytes 30GB

Add-IscsiVirtualDiskTargetMapping -TargetName "iSCSITarget01" -Path "C:\iSCSIDisk\Quorum01.vhdx"
Add-IscsiVirtualDiskTargetMapping -TargetName "iSCSITarget01" -Path "C:\iSCSIDisk\Disk01.vhdx"

Set-IscsiServerTarget `
-TargetName "iSCSITarget01" `
-EnableChap $True `
-Chap (New-Object PSCredential("username", (ConvertTo-SecureString -AsPlainText "UserP@ssw0rd01" -Force)))`
-PassThru



########################################################################################################################################################################
#################### Delete ##########################################################################################
########################################################################################################################################################################

vagrant destroy -f && vagrant status && vagrant global-status
